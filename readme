This is an early prototype for driving multiple stepper motors with acceleration ramps from a BeagleBone using the PRU for real time control.
End goal is to control a delta 3d printer.
Development by Stefan Langemark and HÃ¥kan Langemark. (Mostly Stefan so far...)

This code generates step pulses near 50% duty cycle to avoid problems
with too short pulses on e.g the drv8825 chip.

Demonstration on youtube: http://youtu.be/YlDHBbKrRtU

Acceleration ramp maths based on Atmel's AVR446 application note.

Instructions:
The code depends on PyPRUSS by Elias Bakken (https://bitbucket.org/intelligentagent/pypruss).
Install and make sure you can run the examples.

You need to configure the pin as an output using a device tree overlay. I followed this example:
http://hipstercircuits.com/beaglebone-black-gpio-mux-for-pru-with-device-tree-overlay/

Initial setup drives GPIO0 pin 27 as step for first axis. The output will be on P8-17.

Usage:
python stepper.py

Roadmap:
- Add support for both directions
- Verify mult-axis functionality
...
- Add support for delta printers (hopefully by replacing linear bresenham with delta dda)
- Parse g-code
- Add remaining functionality for 3d-printer (heat, fans, endstops, etc)
Or
- Integrate with Replicape 
